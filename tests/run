#!/bin/sh
# Run Apport self tests.
#
# Test against the source tree when run in the source tree root. Test against
# the system libraries/programs when run from anywhere else.
# You can specify test names as arguments to only run a subset of tests.
#
# Run all tests: tests/run
# Run tests of one module: tests/run crashdb
# Run one test in one module:  tests/run report.test_add_os_info

# Copyright (C) 2007 - 2012 Canonical Ltd.
# Author: Martin Pitt <martin.pitt@ubuntu.com>
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See http://www.gnu.org/copyleft/gpl.html for
# the full text of the license.

set -e

mydir=`dirname "$0"`

# Run against source tree when we are in the source directory
if [ -d tests -a -e setup.py ]; then
    echo "Testing local source tree."

    "$mydir"/run-linters
else
    echo "Testing installed libraries/program."
fi

# do not assume/disturb session bus
unset DBUS_SESSION_BUS_ADDRESS

xvfb=
if type xvfb-run >/dev/null && [ -z "$APPORT_TEST_NOXVFB" ]; then
    xvfb=xvfb-run
fi

failed=0

# check command line whether to only run a subset of tests
if [ -z "$1" ]; then
    TESTS=$(ls $mydir/test_*.py | cut -f2- -d_ | cut -f1 -d.)
else
    while [ -n "$1" ]; do
        if [ -e "$mydir/test_${1%%.*}.py" ]; then
            TESTS="$TESTS $1"
        else
            echo "Test $1 does not exist" >&2
            exit 1
        fi
        shift
    done 
fi

for t in $TESTS; do
    echo "--- Testing $t ---"
    if [ "${t#ui_}" != $t ]; then
        while [ -e /tmp/.X99-lock ]; do
           echo "Waiting for previous xvfb to finish..."
           sleep 0.5
        done
        prefix="$xvfb dbus-launch"
    else
        # ensure that non-UI modules do not require X
        prefix="env -u DISPLAY"
        if [ "$t" = "python_crashes" ] || [ "${t#ui_}" != $t ]; then
            prefix="$prefix dbus-launch"
        fi
    fi
    if [ "$t" = "${t#*.}" ]; then
        test_name="$mydir.test_${t%%.*}"
    else
        test_name="$mydir.test_${t%%.*}.T.${t#*.}"
    fi
    $prefix ${PYTHON:=python3} -m unittest -v ${test_name} || failed=$((failed+1))
done

exit $failed
